{"0": {"question": "Which constraint has the most significant impact on the FIT values for the CMS data set when the target rank is 15?", "referred_figures_indices": [3], "response": "{'Image': 3, 'Text': 0, 'Rationale': 'Image 3 provides a visual comparison of the FIT values with different constraints on the CMS dataset for R=15, which directly relates to the question. Text 0 discusses how constraints impact reconstruction error and FIT, linking to the effect of constraints on FIT values.', 'Answer': 'The non-negativity constraint on H, Sk, V has the most significant impact on the FIT values for the CMS dataset when the target rank is 15.'}", "all_figures_names": ["1803.04572v2-Table1-1.png", "1803.04572v2-Table7-1.png", "1803.04572v2-Table6-1.png", "1803.04572v2-Figure3-1.png", "1803.04572v2-Table4-1.png", "1803.04572v2-Table3-1.png", "1803.04572v2-Table5-1.png", "1803.04572v2-Figure8-1.png"], "referred_figures_names": ["1803.04572v2-Figure3-1.png"], "answer": "The smoothness constraint on $\\M{U_k}$ has the most significant impact on the FIT values for the CMS data set when the target rank is 15.", "figure_type": "plot", "content_type": "figure", "text_chunks": ["% Quantitative Assessment of Constraints To understand how different constraints affect the reconstruction error, we perform an experiment using each of the constraints introduced in Section . We run each method for 5 different random initializations and provide the average and standard deviation of FIT as shown in Figure . This Figure illustrates the impact of each constraint on the FIT values across both datasets for two different target ranks (R=\\{15,40\\).", "For both methods, we add non-negativity constraints to {\\small\\M{H, {\\small\\{\\M{S_k\\, {\\small\\M{V and compare the convergence rates on both real-world datasets for two different target ranks ({\\smallR=\\{15,40\\). Figures and illustrates the results on the CHOA and CMS datasets respectively. \\methodName~ converges faster than SPARTan in all cases.", "The optimal values of each parameter for the two different data sets and target ranks are reported in table . We next quantitatively evaluate the effects of sparsity (average and standard deviation of the sparsity metric) by applying {\\small\\ell_0 regularization norm on the factor matrix \\M{V for \\methodName~ and compare it with SPARTan for 5 different random initializations, as provided in Table . For both the CHOA and CMS datasets, \\methodName~achieves more than a 98\\% sparsity level.", "Moreover, for R=40, not only was \\methodName 32\\times faster on CHOA, but the execution failed using the approach in~ on CMS because of the excessive amount of memory required. In contrast, \\methodName~successfully finished each iteration with an average of 224.21 seconds. \\pgfplotstableread[col sep=space]{CHOA/SPARTan_15.txt\\datatable \\pgfplotstableread[col sep=space]{CHOA/AOADMM_15.txt\\datatable \\pgfplotstableread[col sep=space]{CHOA/SPARTan_40.txt\\datatable \\pgfplotstableread[col sep=space]{CHOA/AOADMM_40.txt\\datatable \\pgfplotstableread[col sep=space]{CMS/SPARTan_15.txt\\datatable \\pgfplotstableread[col sep=space]{CMS/AOADMM_15.txt\\datatable \\pgfplotstableread[col sep=space]{CMS/SPARTan_40.txt\\datatable \\pgfplotstableread[col sep=space]{CMS/AOADMM_40.txt\\datatable Case Study: CHOA Phenotype Discovery \\subsubsection{Model interpretation: Phenotyping is the process of extracting a set of meaningful medical features from raw and noisy EHRs.", "The range of FIT is between {\\small[-\\infty,1] and values near 1 indicate the method can capture the data perfectly. We also use SPARSITY metric to evaluate the factor matrix {\\small\\M{V which is as follows: \\[ \\small SPARSITY= \\frac{nz(\\M{V){size(\\M{V) \\] where nz(V) is the number of zero elements in {\\small\\M{V and size(\\M{V) is the number of elements in {\\small\\M{V. Values near 1 implies the sparsest solution. \\subsubsection{Implementation details \\methodName~ is implemented in MATLAB and includes functionalities from the Tensor Toolbox .", "Figure~ provides a comparison of iteration time for Smooth \\methodName~ and the approach in~ across two different target ranks. First, we remark that our method is more scalable and faster than the baseline. For R=30, \\methodName~is 27\\times and 36\\times faster on CHOA and CMS respectively.", "Even if recently, a scalable PARAFAC2 fitting algorithm was proposed for large, sparse data~, it cannot incorporate meaningful constraints on the model factors such as: a) sparsity, which facilitates model inspection and understanding and b) smoothness, which is meaningful to impose when temporal evolution is modeled as a mode of the input tensor. To tackle the above challenges, we propose the COnstrained PARAFAC2 method (\\mname), which introduces various useful constraints in PARAFAC2 modeling. In particular, generalized temporal smoothness constraints are integrated in order to: a) properly model temporally-evolving phenomena (e.g., evolving disease states), and b) adaptively deal with uneven spacing along the temporal dimension (e.g., when the time duration between consecutive hospital visits may range from 1 day to several years).", "The improved sparsity of the resulting factors is especially prominent in the CMS dataset, with a 400\\% improvement over SPARTan. Sparsity can improve the interpretability and potentially the clinical meaningfulness of phenotypes via more succinct patient characterizations. The quantitative effectiveness is further supported by the qualitative endorsement of a clinical expert (see Section )."], "referred_text_chunks": ["% Quantitative Assessment of Constraints To understand how different constraints affect the reconstruction error, we perform an experiment using each of the constraints introduced in Section . We run each method for 5 different random initializations and provide the average and standard deviation of FIT as shown in Figure . This Figure illustrates the impact of each constraint on the FIT values across both datasets for two different target ranks (R=\\{15,40\\)."]}, "1": {"question": "What are some common medications used to treat Sickle Cell Anemia?", "referred_figures_indices": [6], "response": "{'Image': 6, 'Text': 0, 'Rationale': 'Image 6 lists medications specifically for Sickle Cell Anemia. Text chunk [0] refers to patients with Sickle Cell Anemia, relevant to identifying associated treatments.', 'Answer': 'Common medications for Sickle Cell Anemia include beta-adrenergic agents, analgesic narcotics, NSAIDs, non-salicylate analgesic/antipyretics, sodium/saline preparations, glucocorticoids, inhaled agents, among others.'}", "all_figures_names": ["1803.04572v2-Table2-1.png", "1803.04572v2-Table6-1.png", "1803.04572v2-Figure8-1.png", "1803.04572v2-Figure2-1.png", "1803.04572v2-Table4-1.png", "1803.04572v2-Figure4-1.png", "1803.04572v2-Table7-1.png", "1803.04572v2-Table3-1.png"], "referred_figures_names": ["1803.04572v2-Table7-1.png"], "answer": "According to the table, some common medications used to treat Sickle Cell Anemia include:\n\nBeta-adrenergic agents\nAnalgesics (narcotics and non-narcotics)\nNSAIDs (cyclooxygenase inhibitor - type)\nPotassium replacement\nSodium/saline preparations\nGeneral inhalation agents\nLaxatives and cathartics\nIV solutions (dextrose-saline)\nAntiemetic/antivertigo agents\nSedative-hypnotics (non-barbiturate)\nGlucocorticoids (orally inhaled)\nFolic acid preparations\nAnalgesic narcotic anesthetic adjunct agents", "figure_type": "N/A", "content_type": "table", "text_chunks": ["% \\caption{\\footnotesize The temporal patterns extracted for two patients by \\methodName~, Helwig, and SPARTan. The first row is associated with a patient who has sickle cell anemia while the second row is for a patient with Leukemia. \\end{figure*", "Figure shows the two types of basis functions related to a patient with sickle cell anemia. \\pgfplotstableread[col sep=space]{results/M_spline_gap.txt\\datatable \\pgfplotstableread[col sep=space]{results/M_spline_no_gap.txt\\datatable \\subsubsection{Sparsity on {V: Sparsity constraints have wide applicability to many different domains and have been exploited for several purposes including improved interpretability, reduced model complexity, and increased robustness. For the purpose of EHR-phenotyping, we impose sparsity on factor matrix {\\small\\M{V, to obtain sparse phenotype definitions.", "% Figure displays the evolution of phenotypes (temporal pattern) relating to two patients discovered by \\methodName, Helwig, and SPARTan. The phenotype that is chosen has the highest weight for each patient (largest value in the diagonal {\\small\\M{S_k matrix) and the loadings on the medical features are similar across all three methods. The first row in figure is from a patient who has sickle cell anemia.", "The second row in figure reflects the temporal signature for a patient with Leukemia. In the patient's EHRs, the first visit occurred on day 121 without any sign of Leukemia. The subsequent visit (368 days later) reflects a change in the patient's status with a large number of diagnosis and medications.", "Set Description \\par Children's Healthcare of Atlanta (CHOA): % This dataset contains the EHRs of 247,885 pediatric patients with at least 3 hospital visits. For each patient, we utilize the International Classification of Diseases (ICD9) codes and medication categories from their records, as well as the provided age of the patient (in days) at the visit time.", "While several sparsity inducing constraints can be introduced, we focus on the {\\small\\ell_0 and {\\small\\ell_1 norms, two popular regularization techniques. The {\\small\\ell_0 regularization norm, also known as hard thresholding, is a non-convex optimization problem that caps the number of non-zero values in a matrix. % The {\\small\\ell_1 regularization norm, or the soft thresholding metric, is often used as a convex relaxation of the {\\small\\ell_0 norm.", "In particular, the {\\it time irregularity lies in 1) the variable number of hospital visits, 2) the varying disease states for different patients, and 3) the varying time gaps between consecutive hospital visits. To handle such irregular tensors, the state-of-the-art tensor model is PARAFAC2~, which naturally handles variable size along one of its modes (e.g., time mode). Despite the wide range of PARAFAC2 applications (e.g., natural language processing~, chemical processing~, and social sciences~) its computational requirements have limited its usage for small and dense datasets~.", "Centers for Medicare and Medicaid (CMS): CMS released the Data Entrepreneurs Synthetic Public Use File (DE-SynPUF), a realistic set of claims data that also protects the Medicare beneficiaries' protected health information. The dataset is based on 5\\% of the Medicare beneficiaries during the period between 2008 and 2010. % Similar to CHOA, we extracted ICD9 diagnosis codes and summarized them into CCS categories."], "referred_text_chunks": ["% \\caption{\\footnotesize The temporal patterns extracted for two patients by \\methodName~, Helwig, and SPARTan. The first row is associated with a patient who has sickle cell anemia while the second row is for a patient with Leukemia. \\end{figure*"]}, "2": {"question": "What are the three constraints imposed by COPA on PARAFAC2 model factors?", "referred_figures_indices": [6], "response": "{'Image': 6, 'Text': 7, 'Rationale': 'Image 6 directly illustrates the constraints imposed by COPA on PARAFAC2 model factors, making the constraints visually clear. Text 7 elaborates on specific constraints like sparsity, smoothness, and non-negativity imposed by COPA, which addresses the question precisely.', 'Answer': 'The three constraints imposed by COPA on PARAFAC2 model factors are: sparsity, smoothness, and non-negativity.'}", "all_figures_names": ["1803.04572v2-Figure4-1.png", "1803.04572v2-Figure7-1.png", "1803.04572v2-Table5-1.png", "1803.04572v2-Figure3-1.png", "1803.04572v2-Figure6-1.png", "1803.04572v2-Table4-1.png", "1803.04572v2-Figure1-1.png", "1803.04572v2-Table3-1.png"], "referred_figures_names": ["1803.04572v2-Figure1-1.png"], "answer": "Non-negativity, smoothness, and sparsity.", "figure_type": "Schematic", "content_type": "figure", "text_chunks": ["A small number of works have introduced constraints (other than non-negativity) for the PARAFAC2 model.% Helwig~ imposed both functional and structural constraints. Smoothness (functional constraint) was incorporated by extending the use of basis functions introduced for CP . Structural information (variable loadings) were formulated using Lagrange multipliers by modifying the CP-ALS algorithm.", "Even if recently, a scalable PARAFAC2 fitting algorithm was proposed for large, sparse data~, it cannot incorporate meaningful constraints on the model factors such as: a) sparsity, which facilitates model inspection and understanding and b) smoothness, which is meaningful to impose when temporal evolution is modeled as a mode of the input tensor. To tackle the above challenges, we propose the COnstrained PARAFAC2 method (\\mname), which introduces various useful constraints in PARAFAC2 modeling. In particular, generalized temporal smoothness constraints are integrated in order to: a) properly model temporally-evolving phenomena (e.g., evolving disease states), and b) adaptively deal with uneven spacing along the temporal dimension (e.g., when the time duration between consecutive hospital visits may range from 1 day to several years).", "\\\\ Original PARAFAC2 model As proposed in~, the PARAFAC2 model decomposes each slice of the input {\\small\\M{X_k\\in \\mathbb{R^{I_k \\times J as {\\small\\M{X_k \\approx \\M{U_k \\M{S_k \\M{V^T, where {\\small\\M{U_k \\in \\mathbb{R^{I_k \\times R, {\\small\\M{S_k \\in \\mathbb{R^{R \\times R is a diagonal matrix, and {\\small\\M{V \\in \\mathbb{R^{J \\times R. Uniqueness is an important property in factorization models which ensures that the pursued solution is not an arbitrarily rotated version of the actual latent factors. % In order to enforce uniqueness, Harshman~ imposed the constraint {\\small\\M{U_k^T\\M{U_k =\\Phi", "% Proposed Method: Constrained PARAFAC2 Framework A generalized constrained PARAFAC2 approach is appealing from several perspectives including the ability to encode prior knowledge, improved interpretability, and more robust and reliable results. We propose \\methodName, a scalable and generalized constrained PARAFAC2 model, to impose a variety of constraints on the factors.", "General Framework for \\mname The constrained PARAFAC2 decomposition can be formulated using generalized constraints on \\M{H, {\\small\\M{S_k, and {\\small\\M{V, in the form of {\\smallc(\\M{H), {\\smallc(\\M{S_k), and {\\smallc(\\M{V) as: \\end{equation* subject to {\\small\\M{U_k=\\M{Q_K \\M{H, \\M{Q_k^T \\M{Q_k=\\M{I, and {\\small\\M{S_k is diagonal. To solve for those constraints, we introduce auxiliary variables for {\\small\\M{H, {\\small\\M{S_k, and {\\small\\M{V (denoted as {\\small\\overbar{\\M{H, {\\small\\overbar{\\M{S_k, and {\\small\\overbar{\\M{V). Thus, the optimization problem has the following form: \\end{equation \\noindent We can re-write the objective function as the minimization of {\\smalltr(\\M{X_k^T\\M{X_k)-2tr(\\M{X_k^T\\M{Q_k\\M{H\\M{S_k\\M{V^T)+tr(\\M{V\\M{S_k\\M{H^T \\M{{Q_k^T\\M{Q_k\\M{H\\M{S_k\\M{V^T) in terms of \\M{Q_k.", "While PARAFAC2 is a suitable model for such data, there is no general and scalable framework for imposing constraints in PARAFAC2. Therefore, in this paper we propose, \\methodName, a constrained PARAFAC2 framework for large and sparse data. Our framework is able to impose constraints simultaneously by applying element-wise operations.", "To enable reproducibility and broaden the usage of the PARAFAC2 model, our implementation is publicly available at: {\\url{https://github.com/aafshar/COPA. All the approaches (including the baselines) are evaluated on MatlabR2017b. We also implemented the smooth and functional PARAFAC2 model , as the original approach was only available in R .", "Our algorithm leverages AO-ADMM style iterative updates for some of the factor matrices and introduces several PARAFAC2-specific techniques to improve computational efficiency. Our framework has the following benefits: In this section, we first illustrate the general framework for formulating and solving the constrained PARAFAC2 problem. We then discuss several special constraints that are useful for the application of phenotyping including sparsity on the {\\small\\M{V, smoothness on the {\\small\\M{U_k, and non-negativity on the {\\small\\M{S_k factor matrices in more detail."], "referred_text_chunks": ["A small number of works have introduced constraints (other than non-negativity) for the PARAFAC2 model.% Helwig~ imposed both functional and structural constraints. Smoothness (functional constraint) was incorporated by extending the use of basis functions introduced for CP . Structural information (variable loadings) were formulated using Lagrange multipliers by modifying the CP-ALS algorithm."]}, "3": {"question": "How do the temporal patterns of phenotype magnitude differ between sickle cell anemia and leukemia patients?", "referred_figures_indices": [5], "response": "{'Image': 5, 'Text': 1, 'Rationale': 'Image 5 directly shows temporal patterns for sickle cell anemia and leukemia patients, and Text 1 describes these patterns, highlighting differences using the same methods.', 'Answer': 'Sickle cell anemia shows smooth changes in phenotype magnitude, while leukemia has more abrupt changes, as shown by SPARTan spikes and smooth transitions in the other methods.'}", "all_figures_names": ["1803.04572v2-Table6-1.png", "1803.04572v2-Figure4-1.png", "1803.04572v2-Figure6-1.png", "1803.04572v2-Figure7-1.png", "1803.04572v2-Figure1-1.png", "1803.04572v2-Figure8-1.png", "1803.04572v2-Table5-1.png", "1803.04572v2-Figure5-1.png"], "referred_figures_names": ["1803.04572v2-Figure8-1.png"], "answer": "The temporal patterns of phenotype magnitude differ between sickle cell anemia and leukemia patients in terms of both shape and magnitude. For sickle cell anemia patients, the patterns are generally smoother and more periodic, with lower overall magnitude. For leukemia patients, the patterns are more erratic and have higher overall magnitude.", "figure_type": "plot", "content_type": "figure", "text_chunks": ["% \\caption{\\footnotesize The temporal patterns extracted for two patients by \\methodName~, Helwig, and SPARTan. The first row is associated with a patient who has sickle cell anemia while the second row is for a patient with Leukemia. \\end{figure*", "% Figure displays the evolution of phenotypes (temporal pattern) relating to two patients discovered by \\methodName, Helwig, and SPARTan. The phenotype that is chosen has the highest weight for each patient (largest value in the diagonal {\\small\\M{S_k matrix) and the loadings on the medical features are similar across all three methods. The first row in figure is from a patient who has sickle cell anemia.", "\\methodName~ encapsulates this phenomenon, while the Helwig factor suggests the presence of Leukemia at the first visit which is not present. Although SPARTan produces temporally-evolving phenotypes, it treats time as a categorical feature. Thus, there are sudden spikes in the temporal pattern which hinders interpretability and clinical meaningfulness.", "The second row in figure reflects the temporal signature for a patient with Leukemia. In the patient's EHRs, the first visit occurred on day 121 without any sign of Leukemia. The subsequent visit (368 days later) reflects a change in the patient's status with a large number of diagnosis and medications.", "Figure shows the two types of basis functions related to a patient with sickle cell anemia. \\pgfplotstableread[col sep=space]{results/M_spline_gap.txt\\datatable \\pgfplotstableread[col sep=space]{results/M_spline_no_gap.txt\\datatable \\subsubsection{Sparsity on {V: Sparsity constraints have wide applicability to many different domains and have been exploited for several purposes including improved interpretability, reduced model complexity, and increased robustness. For the purpose of EHR-phenotyping, we impose sparsity on factor matrix {\\small\\M{V, to obtain sparse phenotype definitions.", "There is a large gap between the 19^{th and 20^{th visits (742 days or \\sim 2 years) with a significant increase in the occurrence of medications/diagnosis in the patient's EHR record. \\methodName~ models this difference and yields phenotype loadings that capture this drastic change. % On the other hand, the factor resulting from Helwig's approach assumes the visits are close in time and produce the same magnitude for the next visit.", "Our motivating application is extracting temporal patterns and phenotypes from noisy and raw EHRs. By incorporating smoothness and sparsity, we produce meaningful phenotypes and patient temporal signatures that are confirmed by a clinical expert. ACKNOWLEDGMENT This work was supported by the National Science Foundation, award IIS-\\#1418511 and CCF-\\#1533768, the National Institute of Health award 1R01MD011682-01 and R56HL138415, Children's Healthcare of Atlanta, and the National Institute of Health under award number 1K01LM012924-01.", "In particular, the {\\it time irregularity lies in 1) the variable number of hospital visits, 2) the varying disease states for different patients, and 3) the varying time gaps between consecutive hospital visits. To handle such irregular tensors, the state-of-the-art tensor model is PARAFAC2~, which naturally handles variable size along one of its modes (e.g., time mode). Despite the wide range of PARAFAC2 applications (e.g., natural language processing~, chemical processing~, and social sciences~) its computational requirements have limited its usage for small and dense datasets~."], "referred_text_chunks": ["% \\caption{\\footnotesize The temporal patterns extracted for two patients by \\methodName~, Helwig, and SPARTan. The first row is associated with a patient who has sickle cell anemia while the second row is for a patient with Leukemia. \\end{figure*"]}, "4": {"question": "Which algorithm converged faster in both cases of target rank?", "referred_figures_indices": [0], "response": "{'Image': 0, 'Text': 0, 'Rationale': 'Image 0 directly compares the convergence of COPA and SPARTan across two target ranks, which is the focus of the question. Text 0 describes the convergence rates of both methods, stating that \\methodName~ (COPA) converges faster than SPARTan.', 'Answer': 'COPA converged faster in both cases of target rank.'}", "all_figures_names": ["1803.04572v2-Figure6-1.png", "1803.04572v2-Table6-1.png", "1803.04572v2-Table7-1.png", "1803.04572v2-Table3-1.png", "1803.04572v2-Table2-1.png", "1803.04572v2-Figure8-1.png", "1803.04572v2-Figure3-1.png", "1803.04572v2-Figure1-1.png"], "referred_figures_names": ["1803.04572v2-Figure6-1.png"], "answer": "SPARTan converged faster in both cases of target rank.", "figure_type": "plot", "content_type": "figure", "text_chunks": ["For both methods, we add non-negativity constraints to {\\small\\M{H, {\\small\\{\\M{S_k\\, {\\small\\M{V and compare the convergence rates on both real-world datasets for two different target ranks ({\\smallR=\\{15,40\\). Figures and illustrates the results on the CHOA and CMS datasets respectively. \\methodName~ converges faster than SPARTan in all cases.", "Figure~ provides a comparison of iteration time for Smooth \\methodName~ and the approach in~ across two different target ranks. First, we remark that our method is more scalable and faster than the baseline. For R=30, \\methodName~is 27\\times and 36\\times faster on CHOA and CMS respectively.", "In this section, we will provide several steps to accelerate the convergence of our algorithm. First, our algorithm needs to decompose {\\small\\T{Y, therefore, MTTKRP will be a bottleneck for sparse input. Thus \\methodName~ uses the fast MTTKRP proposed in SPARTan .", "Scalability and FIT-TIME First, we evaluate and compare the total running time of all versions of COPA and SPARTan on the real datasets. We run each method 5 times and report averages and standard deviations. As shown in Figure , the average of total running time of \\methodName with non-negativity constraints imposed on \\M{H, \\{\\M{S_k\\, \\M{V is faster (up to 1.57\\times) than SPARTan with the same set of constraints for two data sets and different target ranks.", "Also we provide the speedups (running time of SPARTan divide by running time of \\methodName) in Table . % Moreover, the average running times of Smooth \\methodName are just slightly slower than SPARTan, which does not support such smooth constraints. % Next, we compare the best convergence (Time in seconds versus FIT) out of 5 different random initializations of the proposed \\methodName~approach against SPARTan.", "While both \\methodName~ and SPARTan avoid direct construction of the sparse tensor {\\small\\T{Y, the computational gains can be attributed to the efficiency of the non-negative proximity operator, an element-wise operation that zeros out the negative values in \\methodName whereas SPARTan performs expensive NN-Least Square operation. Moreover, caching the MTTKRP operation and the Cholesky decomposition of the Gram matrix help \\methodName to reduce the number of computations. In addition, we assessed the scalability of incorporating temporal smoothness onto {\\small\\M{U_k and compare it with Helwig's approach~ as SPARTan does not have the smoothness constraint.", "A specialized Matricized-Tensor-Times-Khatri-Rao-Product (MTTKRP) was designed to efficiently decompose the tensor {\\small\\T{Y ({\\small\\M{Y_k = \\M{Q_k^T \\M{X_k) both in terms of speed and memory. Experimental results demonstrate the scalability of this approach for large and sparse datasets. However, the target model and the fitting algorithm do not enable imposing constraints such as smoothness and sparsity, which would enhance the interpretability of the model results.", "The optimal values of each parameter for the two different data sets and target ranks are reported in table . We next quantitatively evaluate the effects of sparsity (average and standard deviation of the sparsity metric) by applying {\\small\\ell_0 regularization norm on the factor matrix \\M{V for \\methodName~ and compare it with SPARTan for 5 different random initializations, as provided in Table . For both the CHOA and CMS datasets, \\methodName~achieves more than a 98\\% sparsity level."], "referred_text_chunks": ["For both methods, we add non-negativity constraints to {\\small\\M{H, {\\small\\{\\M{S_k\\, {\\small\\M{V and compare the convergence rates on both real-world datasets for two different target ranks ({\\smallR=\\{15,40\\). Figures and illustrates the results on the CHOA and CMS datasets respectively. \\methodName~ converges faster than SPARTan in all cases."]}, "5": {"question": "Which method is faster, COPA or Helwig?", "referred_figures_indices": [6], "response": "{'Image': 6, 'Text': 5, 'Rationale': 'Image 6 directly compares the running time between COPA and Helwig, showcasing COPA\u2019s performance advantage. Text 5 suggests that COPA is significantly faster and more scalable than the Helwig approach.', 'Answer': 'COPA is faster than Helwig.'}", "all_figures_names": ["1803.04572v2-Table5-1.png", "1803.04572v2-Figure2-1.png", "1803.04572v2-Figure6-1.png", "1803.04572v2-Figure5-1.png", "1803.04572v2-Figure4-1.png", "1803.04572v2-Table7-1.png", "1803.04572v2-Figure7-1.png", "1803.04572v2-Table2-1.png"], "referred_figures_names": ["1803.04572v2-Figure7-1.png"], "answer": "COPA is faster than Helwig.", "figure_type": "plot", "content_type": "figure", "text_chunks": ["Scalability and FIT-TIME First, we evaluate and compare the total running time of all versions of COPA and SPARTan on the real datasets. We run each method 5 times and report averages and standard deviations. As shown in Figure , the average of total running time of \\methodName with non-negativity constraints imposed on \\M{H, \\{\\M{S_k\\, \\M{V is faster (up to 1.57\\times) than SPARTan with the same set of constraints for two data sets and different target ranks.", "A small number of works have introduced constraints (other than non-negativity) for the PARAFAC2 model.% Helwig~ imposed both functional and structural constraints. Smoothness (functional constraint) was incorporated by extending the use of basis functions introduced for CP . Structural information (variable loadings) were formulated using Lagrange multipliers by modifying the CP-ALS algorithm.", "For both methods, we add non-negativity constraints to {\\small\\M{H, {\\small\\{\\M{S_k\\, {\\small\\M{V and compare the convergence rates on both real-world datasets for two different target ranks ({\\smallR=\\{15,40\\). Figures and illustrates the results on the CHOA and CMS datasets respectively. \\methodName~ converges faster than SPARTan in all cases.", "In order to provide more precise comparison we apply paired t-tests on the two sets of running time, one from SPARTan and the other from a version of \\methodName under the null hypothesis that the running times are not significantly different between the two methods. We present the p-values return from the t-tests in Table . The p-values for COPA with non-negativity constraint and sparsity constraint are small which suggest that the version of \\methodName is significantly better than the SPARTan (rejecting the null hypothesis).", "There is a large gap between the 19^{th and 20^{th visits (742 days or \\sim 2 years) with a significant increase in the occurrence of medications/diagnosis in the patient's EHR record. \\methodName~ models this difference and yields phenotype loadings that capture this drastic change. % On the other hand, the factor resulting from Helwig's approach assumes the visits are close in time and produce the same magnitude for the next visit.", "Figure~ provides a comparison of iteration time for Smooth \\methodName~ and the approach in~ across two different target ranks. First, we remark that our method is more scalable and faster than the baseline. For R=30, \\methodName~is 27\\times and 36\\times faster on CHOA and CMS respectively.", "% Figure displays the evolution of phenotypes (temporal pattern) relating to two patients discovered by \\methodName, Helwig, and SPARTan. The phenotype that is chosen has the highest weight for each patient (largest value in the diagonal {\\small\\M{S_k matrix) and the loadings on the medical features are similar across all three methods. The first row in figure is from a patient who has sickle cell anemia.", "% \\caption{\\footnotesize The temporal patterns extracted for two patients by \\methodName~, Helwig, and SPARTan. The first row is associated with a patient who has sickle cell anemia while the second row is for a patient with Leukemia. \\end{figure*"], "referred_text_chunks": ["Scalability and FIT-TIME First, we evaluate and compare the total running time of all versions of COPA and SPARTan on the real datasets. We run each method 5 times and report averages and standard deviations. As shown in Figure , the average of total running time of \\methodName with non-negativity constraints imposed on \\M{H, \\{\\M{S_k\\, \\M{V is faster (up to 1.57\\times) than SPARTan with the same set of constraints for two data sets and different target ranks."]}, "6": {"question": "Which dataset has the largest number of clinical visits per patient?", "referred_figures_indices": [5], "response": "{'Image': 5, 'Text': 3, 'Rationale': 'Image 5 shows the summary statistics including the maximum number of clinical visits per patient for both datasets. Text 3 contains detailed statistics about the datasets, including the maximum number of observations for a patient.', 'Answer': 'The CMS dataset has the largest number of clinical visits per patient, with a maximum of 1500 visits.'}", "all_figures_names": ["1803.04572v2-Table1-1.png", "1803.04572v2-Figure7-1.png", "1803.04572v2-Figure1-1.png", "1803.04572v2-Figure4-1.png", "1803.04572v2-Table7-1.png", "1803.04572v2-Table3-1.png", "1803.04572v2-Table5-1.png", "1803.04572v2-Figure2-1.png"], "referred_figures_names": ["1803.04572v2-Table3-1.png"], "answer": "CMS", "figure_type": "table", "content_type": "table", "text_chunks": ["Set Description \\par Children's Healthcare of Atlanta (CHOA): % This dataset contains the EHRs of 247,885 pediatric patients with at least 3 hospital visits. For each patient, we utilize the International Classification of Diseases (ICD9) codes and medication categories from their records, as well as the provided age of the patient (in days) at the visit time.", "EHR datasets consist of K patients where patient k is represented using a matrix \\M{X_k and for each patient, J medical features are recorded. Patient k can have I_k hospital visits over time, which can be of different size across patients as shown in Figure ~. In this case, clinical visits are the irregular time points which vary across patients.", "To improve interpretability and clinical meaningfulness, ICD9 codes are mapped into broader Clinical Classification Software (CCS) categories. Each patient slice {\\small\\M{X_k records the clinical observations and the medical features. The resulting tensor is 247,885 patients by 1388 features by maximum 857 observations.", "The resulting number of patients are 843,162 with 284 features and the maximum number of observations for a patient are 1500. Table provides the summary statistics of real datasets. \\subsubsection{Baseline Approaches In this section, we briefly introduce the baseline that we compare our proposed method.", "There is a large gap between the 19^{th and 20^{th visits (742 days or \\sim 2 years) with a significant increase in the occurrence of medications/diagnosis in the patient's EHR record. \\methodName~ models this difference and yields phenotype loadings that capture this drastic change. % On the other hand, the factor resulting from Helwig's approach assumes the visits are close in time and produce the same magnitude for the next visit.", "We define the following model interpretations regarding to our target case study: \\subsubsection{Case Study Setup: For this case study, we incorporate smoothness on {\\small\\M{U_k, non-negativity on {\\small\\M{S_k, and sparsity on {\\small\\M{V simultaneously to extract phenotypes from a subset of medically complex patients from CHOA dataset. These are the patients with high utilization, multiple specialty visits and high severity. A total of 4602 patients are selected with 810 distinct medical features.", "% Figure displays the evolution of phenotypes (temporal pattern) relating to two patients discovered by \\methodName, Helwig, and SPARTan. The phenotype that is chosen has the highest weight for each patient (largest value in the diagonal {\\small\\M{S_k matrix) and the loadings on the medical features are similar across all three methods. The first row in figure is from a patient who has sickle cell anemia.", "These spline functions (with day-resolution) are then transformed to their visit-resolution. Thus, given the number and position of the knots ({\\small[\\beta_1. .\\beta_m]), which can be estimated using the metric introduced in Helwig's work , we create the {\\smalli^{th basis function of patient {\\smallk with degree {\\smalld using the following recursive formula: \\[\\small m_{ik,d(t)=\\frac{t-\\beta_i{\\beta_{i+d-\\beta_im_{ik,d-1(t)+\\frac{\\beta_{i+d+1-t{\\beta_{i+d+1-\\beta_{i+1m_{i+1k,d-1(t) \\] where t denotes the hospital visit day and {\\small\\beta_i is the {\\smalli^{th knot. Hence, we can reconstruct the basis functions as {\\smallm_{ik,0(t) is 1 if {\\smallt \\in [\\beta_i,\\beta_{i+1] and zero otherwise."], "referred_text_chunks": ["Set Description \\par Children's Healthcare of Atlanta (CHOA): % This dataset contains the EHRs of 247,885 pediatric patients with at least 3 hospital visits. For each patient, we utilize the International Classification of Diseases (ICD9) codes and medication categories from their records, as well as the provided age of the patient (in days) at the visit time."]}}